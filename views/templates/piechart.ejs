<% layout('layout/../boilerplate.ejs') %>

<div style="padding: 2rem 0; min-height: 100vh; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
    <div class="container" style="max-width: 1200px; margin: 0 auto; padding: 0 1rem;">
        <!-- Header Section -->
        <div class="text-center mb-5">
            <div style="display: inline-flex; align-items: center; justify-content: center; gap: 1rem; margin-bottom: 2rem;">
                <div style="width: 60px; height: 60px; background: rgba(255,255,255,0.2); border-radius: 50%; display: flex; align-items: center; justify-content: center; backdrop-filter: blur(10px);">
                    <i class="fas fa-chart-pie" style="font-size: 1.5rem; color: white;"></i>
                </div>
                <h1 style="font-size: 3rem; font-weight: 800; color: white; margin: 0; text-shadow: 0 2px 4px rgba(0,0,0,0.3);">
                    Emotion Distribution
                </h1>
            </div>
            <p style="color: rgba(255,255,255,0.9); font-size: 1.2rem; margin: 0; font-weight: 500;">
                Proportional analysis of your emotional patterns
            </p>
        </div>

        <!-- Main Content Grid -->
        <div class="grid grid-cols-2" style="gap: 2rem; align-items: start;">
            <!-- Chart Container -->
            <div class="modern-card" style="background: rgba(255,255,255,0.98); backdrop-filter: blur(10px); padding: 3rem;">
                <div style="height: 500px; position: relative;">
                    <canvas id="myPieChart"></canvas>
                </div>
            </div>

            <!-- Legend and Stats -->
            <div>
                <!-- Stats Summary -->
                <div class="modern-card" style="background: rgba(255,255,255,0.95); backdrop-filter: blur(10px); padding: 2rem; margin-bottom: 2rem;">
                    <h3 style="font-size: 1.5rem; font-weight: 700; color: var(--text-primary); margin: 0 0 1.5rem; text-align: center;">
                        <i class="fas fa-analytics" style="color: var(--primary-color); margin-right: 0.5rem;"></i>
                        Analysis Summary
                    </h3>
                    <div class="grid grid-cols-2" style="gap: 1rem;">
                        <div style="text-align: center; padding: 1rem; background: var(--surface); border-radius: var(--border-radius); border: 1px solid var(--border-light);">
                            <div style="font-size: 1.8rem; font-weight: 700; color: var(--primary-color);" id="totalDuration">0s</div>
                            <div style="color: var(--text-secondary); font-size: 0.9rem;">Total Duration</div>
                        </div>
                        <div style="text-align: center; padding: 1rem; background: var(--surface); border-radius: var(--border-radius); border: 1px solid var(--border-light);">
                            <div style="font-size: 1.8rem; font-weight: 700; color: var(--success-color);" id="primaryEmotion">-</div>
                            <div style="color: var(--text-secondary); font-size: 0.9rem;">Primary Emotion</div>
                        </div>
                    </div>
                </div>

                <!-- Legend Section -->
                <div class="modern-card" style="background: rgba(255,255,255,0.95); backdrop-filter: blur(10px); padding: 2rem;">
                    <h3 style="font-size: 1.3rem; font-weight: 700; color: var(--text-primary); margin: 0 0 1.5rem; text-align: center;">
                        Emotion Breakdown
                    </h3>
                    <div id="customLegend" style="display: flex; flex-direction: column; gap: 1rem;">
                        <!-- Legend items will be populated by JavaScript -->
                    </div>
                </div>
            </div>
        </div>

        <!-- Action Buttons -->
        <div style="display: flex; gap: 1.5rem; justify-content: center; flex-wrap: wrap; margin-top: 3rem;">
            <a href="/bargraph/<%= id || 'default' %>" class="btn-modern btn-primary" style="padding: 1rem 2rem; font-size: 1.1rem;">
                <i class="fas fa-chart-bar"></i> View Bar Chart
            </a>
            <a href="/viewprofile" class="btn-modern btn-secondary" style="padding: 1rem 2rem; font-size: 1.1rem;">
                <i class="fas fa-user"></i> Back to Profile
            </a>
            <a href="/home" class="btn-modern btn-outline" style="padding: 1rem 2rem; font-size: 1.1rem; background: rgba(255,255,255,0.1); color: white; border-color: rgba(255,255,255,0.3);">
                <i class="fas fa-redo"></i> New Analysis
            </a>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Data from Node.js
    const pieData = <%- pieJsonData %>;
    
    // Enhanced color palette with gradients for emotions
    const emotionConfig = {
        'happy': { color: '#22c55e', gradient: ['#22c55e', '#16a34a'], icon: 'fa-smile' },
        'neutral': { color: '#64748b', gradient: ['#64748b', '#475569'], icon: 'fa-meh' },
        'sad': { color: '#3b82f6', gradient: ['#3b82f6', '#2563eb'], icon: 'fa-frown' },
        'angry': { color: '#ef4444', gradient: ['#ef4444', '#dc2626'], icon: 'fa-angry' },
        'fearful': { color: '#f59e0b', gradient: ['#f59e0b', '#d97706'], icon: 'fa-surprise' },
        'disgusted': { color: '#8b5cf6', gradient: ['#8b5cf6', '#7c3aed'], icon: 'fa-grimace' },
        'surprised': { color: '#06d6a0', gradient: ['#06d6a0', '#059669'], icon: 'fa-grin-stars' }
    };
    
    // Calculate stats
    const total = pieData.values.reduce((sum, val) => sum + val, 0);
    const maxIndex = pieData.values.indexOf(Math.max(...pieData.values));
    const primaryEmotion = pieData.labels[maxIndex];
    
    // Update summary stats
    document.getElementById('totalDuration').textContent = total.toFixed(1) + 's';
    document.getElementById('primaryEmotion').textContent = primaryEmotion.charAt(0).toUpperCase() + primaryEmotion.slice(1);
    
    // Create enhanced legend with progress bars
    const legendContainer = document.getElementById('customLegend');
    pieData.labels.forEach((label, index) => {
        const percentage = total > 0 ? ((pieData.values[index] / total) * 100).toFixed(1) : 0;
        const config = emotionConfig[label] || { color: '#64748b', icon: 'fa-circle' };
        
        const legendItem = document.createElement('div');
        legendItem.style.cssText = `
            padding: 1rem; 
            background: var(--surface); 
            border-radius: var(--border-radius-lg); 
            border: 1px solid var(--border-light);
            transition: all 0.3s ease;
            cursor: pointer;
        `;
        
        legendItem.innerHTML = `
            <div style="display: flex; align-items: center; gap: 1rem; margin-bottom: 0.75rem;">
                <div style="width: 45px; height: 45px; background: linear-gradient(135deg, ${config.gradient[0]}, ${config.gradient[1]}); border-radius: 50%; display: flex; align-items: center; justify-content: center; box-shadow: 0 2px 8px rgba(0,0,0,0.1);">
                    <i class="fas ${config.icon}" style="color: white; font-size: 1.1rem;"></i>
                </div>
                <div style="flex: 1;">
                    <div style="font-weight: 700; color: var(--text-primary); text-transform: capitalize; font-size: 1.1rem;">${label}</div>
                    <div style="color: var(--text-secondary); font-size: 0.9rem;">${pieData.values[index].toFixed(2)}s</div>
                </div>
                <div style="text-align: right;">
                    <div style="font-weight: 700; color: ${config.color}; font-size: 1.2rem;">${percentage}%</div>
                </div>
            </div>
            <div style="width: 100%; height: 6px; background: var(--border-light); border-radius: 3px; overflow: hidden;">
                <div style="width: ${percentage}%; height: 100%; background: linear-gradient(90deg, ${config.gradient[0]}, ${config.gradient[1]}); border-radius: 3px; transition: width 1s ease;"></div>
            </div>
        `;
        
        legendItem.addEventListener('mouseenter', () => {
            legendItem.style.transform = 'translateY(-3px)';
            legendItem.style.boxShadow = '0 8px 25px rgba(0,0,0,0.15)';
            legendItem.style.borderColor = config.color;
        });
        
        legendItem.addEventListener('mouseleave', () => {
            legendItem.style.transform = 'translateY(0)';
            legendItem.style.boxShadow = 'none';
            legendItem.style.borderColor = 'var(--border-light)';
        });
        
        legendContainer.appendChild(legendItem);
    });

    // Create gradients for chart
    const ctx = document.getElementById('myPieChart').getContext('2d');
    const gradients = pieData.labels.map(label => {
        const gradient = ctx.createRadialGradient(250, 250, 50, 250, 250, 200);
        const config = emotionConfig[label] || { gradient: ['#64748b', '#475569'] };
        gradient.addColorStop(0, config.gradient[0]);
        gradient.addColorStop(1, config.gradient[1]);
        return gradient;
    });

    // Create enhanced doughnut chart
    const myPieChart = new Chart(ctx, {
        type: 'doughnut',
        data: {
            labels: pieData.labels.map(label => label.charAt(0).toUpperCase() + label.slice(1)),
            datasets: [{
                label: 'Duration',
                data: pieData.values,
                backgroundColor: gradients,
                borderColor: '#ffffff',
                borderWidth: 4,
                hoverBorderWidth: 6,
                hoverOffset: 15,
                hoverBorderColor: '#ffffff'
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            cutout: '50%',
            plugins: {
                legend: {
                    display: false
                },
                tooltip: {
                    backgroundColor: 'rgba(15, 23, 42, 0.95)',
                    titleColor: '#ffffff',
                    bodyColor: '#ffffff',
                    borderColor: '#3b82f6',
                    borderWidth: 2,
                    cornerRadius: 12,
                    displayColors: true,
                    titleFont: { size: 16, weight: 'bold' },
                    bodyFont: { size: 14 },
                    padding: 15,
                    callbacks: {
                        title: function(context) {
                            return context[0].label + ' Emotion';
                        },
                        label: function(context) {
                            const percentage = total > 0 ? ((context.parsed / total) * 100).toFixed(1) : 0;
                            return `Duration: ${context.parsed.toFixed(2)}s (${percentage}%)`;
                        }
                    }
                }
            },
            animation: {
                animateRotate: true,
                animateScale: true,
                duration: 2000,
                easing: 'easeOutBounce'
            },
            interaction: {
                intersect: false
            },
            onHover: (event, activeElements) => {
                event.native.target.style.cursor = activeElements.length > 0 ? 'pointer' : 'default';
            }
        }
    });
});
</script>

<style>
@media (max-width: 768px) {
    .grid-cols-2 {
        grid-template-columns: 1fr;
    }
}
</style>
