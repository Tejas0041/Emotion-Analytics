<% layout('layout/../boilerplate.ejs') %>

<div style="padding: 2rem 0; min-height: 100vh; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
    <div class="container" style="max-width: 1000px; margin: 0 auto; padding: 0 1rem;">
        <!-- Header Section -->
        <div class="text-center mb-5">
            <div style="display: inline-flex; align-items: center; justify-content: center; gap: 1rem; margin-bottom: 2rem;">
                <div style="width: 60px; height: 60px; background: rgba(255,255,255,0.2); border-radius: 50%; display: flex; align-items: center; justify-content: center; backdrop-filter: blur(10px);">
                    <i class="fas fa-brain" style="font-size: 1.5rem; color: white;"></i>
                </div>
                <h1 style="font-size: 3rem; font-weight: 800; color: white; margin: 0; text-shadow: 0 2px 4px rgba(0,0,0,0.3);">
                    Emotion Recognition
                </h1>
            </div>
            <p style="color: rgba(255,255,255,0.9); font-size: 1.2rem; margin: 0; font-weight: 500;">
                AI-powered real-time emotion detection and analysis
            </p>
        </div>

        <!-- Main Content Card -->
        <div class="modern-card" style="background: rgba(255,255,255,0.98); backdrop-filter: blur(10px); padding: 3rem;">
            <!-- Start Screen -->
            <div id="startScreen" class="text-center">
                <div style="margin-bottom: 3rem;">
                    <div style="width: 120px; height: 120px; background: linear-gradient(135deg, var(--primary-color), var(--accent-color)); border-radius: 50%; display: flex; align-items: center; justify-content: center; margin: 0 auto 2rem; box-shadow: 0 8px 32px rgba(0,0,0,0.1);">
                        <i class="fas fa-play" style="font-size: 2.5rem; color: white; margin-left: 5px;"></i>
                    </div>
                    <h2 style="font-size: 2rem; font-weight: 700; color: var(--text-primary); margin-bottom: 1rem;">Ready to Start Analysis?</h2>
                    <p style="color: var(--text-secondary); font-size: 1.1rem; margin-bottom: 2rem; max-width: 500px; margin-left: auto; margin-right: auto;">
                        Click the button below to begin real-time emotion detection. Make sure you're in a well-lit area and your face is clearly visible.
                    </p>
                    
                    <!-- Permission Notice -->
                    <div style="background: var(--surface); padding: 1.5rem; border-radius: var(--border-radius-lg); border: 1px solid var(--border-light); margin-bottom: 2rem; max-width: 600px; margin-left: auto; margin-right: auto;">
                        <div style="display: flex; align-items: center; gap: 1rem; margin-bottom: 1rem;">
                            <i class="fas fa-info-circle" style="color: var(--info-color); font-size: 1.2rem;"></i>
                            <h4 style="margin: 0; color: var(--text-primary); font-weight: 600;">Camera Permission Required</h4>
                        </div>
                        <p style="margin: 0; color: var(--text-secondary); font-size: 0.95rem;">
                            This application needs access to your camera to analyze facial expressions. Your video is processed locally and not stored or transmitted.
                        </p>
                    </div>

                    <button id="startAnalysisBtn" class="btn-modern btn-primary" style="padding: 1.25rem 3rem; font-size: 1.2rem; margin-bottom: 2rem;">
                        <i class="fas fa-video"></i> Start Emotion Analysis
                    </button>
                </div>
            </div>

            <!-- Analysis Screen -->
            <div id="analysisScreen" style="display: none;">
                <!-- Video Section -->
                <div class="video-container text-center mb-4" id="videoContainer">
                    <video id="video" autoplay muted playsinline style="width: 100%; max-width: 640px; height: auto; border-radius: var(--border-radius-lg); box-shadow: 0 8px 32px rgba(0,0,0,0.1);"></video>
                    
                    <!-- Loading Overlay -->
                    <div id="loading-overlay" class="loading-overlay">
                        <div class="loading-content">
                            <div class="loading-pulse"></div>
                            <p>Initializing AI models...</p>
                            <div class="loading-dots mt-2">
                                <span></span>
                                <span></span>
                                <span></span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Status Section -->
                <div class="text-center">
                    <div id="emotion-status" class="mb-4" style="padding: 1.5rem; background: linear-gradient(135deg, #1e40af, #1d4ed8); border-radius: var(--border-radius-lg); color: white; display: none; border: 2px solid #3b82f6;">
                        <div style="display: flex; align-items: center; justify-content: center; gap: 1rem;">
                            <div class="loading-bars">
                                <span style="background: white;"></span>
                                <span style="background: white;"></span>
                                <span style="background: white;"></span>
                            </div>
                            <p style="margin: 0; font-weight: 600; font-size: 1.1rem; text-shadow: 0 1px 2px rgba(0,0,0,0.3);">
                                <i class="fas fa-eye"></i> Analyzing emotions in real-time...
                            </p>
                        </div>
                    </div>

                    <!-- Debug Panel -->
                    <div id="debug-panel" style="background: rgba(0,0,0,0.8); color: white; padding: 1rem; border-radius: 0.5rem; margin-bottom: 1rem; font-family: monospace; font-size: 0.875rem; display: none;">
                        <div style="display: flex; justify-content: between; align-items: center; margin-bottom: 0.5rem;">
                            <strong>üîß Debug Panel</strong>
                            <button onclick="document.getElementById('debug-panel').style.display='none'" style="background: none; border: none; color: white; cursor: pointer;">‚úï</button>
                        </div>
                        <div id="debug-info">
                            <div>Face-API: <span id="faceapi-status">‚ùì Checking...</span></div>
                            <div>Models: <span id="models-status">‚ùì Loading...</span></div>
                            <div>Video: <span id="video-status">‚ùì Waiting...</span></div>
                            <div>Canvas: <span id="canvas-status">‚ùì Not setup</span></div>
                            <div>Detection: <span id="detection-status">‚ùì Stopped</span></div>
                            <div style="margin-top: 0.5rem; padding-top: 0.5rem; border-top: 1px solid #444;">
                                <strong>Current Emotion Data:</strong><br>
                                Happy: <span id="debug-happy">0</span>ms<br>
                                Neutral: <span id="debug-neutral">0</span>ms<br>
                                Sad: <span id="debug-sad">0</span>ms<br>
                                Total: <span id="debug-total">0</span>ms
                            </div>
                        </div>
                        <div style="margin-top: 1rem;">
                            <button onclick="window.testCanvas && window.testCanvas()" style="background: #3b82f6; color: white; border: none; padding: 0.5rem 1rem; border-radius: 0.25rem; margin-right: 0.5rem; cursor: pointer;">Test Canvas</button>
                            <button onclick="window.setupCanvas && window.setupCanvas()" style="background: #8b5cf6; color: white; border: none; padding: 0.5rem 1rem; border-radius: 0.25rem; margin-right: 0.5rem; cursor: pointer;">Setup Canvas</button>
                            <button onclick="window.startDetection && window.startDetection()" style="background: #22c55e; color: white; border: none; padding: 0.5rem 1rem; border-radius: 0.25rem; margin-right: 0.5rem; cursor: pointer;">Start Detection</button>
                            <button onclick="window.stopDetection && window.stopDetection()" style="background: #ef4444; color: white; border: none; padding: 0.5rem 1rem; border-radius: 0.25rem; cursor: pointer;">Stop Detection</button>
                        </div>
                        <div style="margin-top: 0.5rem; font-size: 0.8rem; color: #ccc;">
                            1. Click "Setup Canvas" first<br>
                            2. Click "Test Canvas" to see if overlay works<br>
                            3. Click "Start Detection" to begin face detection
                        </div>
                    </div>

                    <!-- Control Form -->
                    <form action="/stats" method="post" id="emotionForm">
                        <input type="number" name="fearful" class="hidden" id="fearful">
                        <input type="number" name="sad" class="hidden" id="sad">
                        <input type="number" name="angry" class="hidden" id="angry">
                        <input type="number" name="neutral" class="hidden" id="neutral">
                        <input type="number" name="surprised" class="hidden" id="surprised">
                        <input type="number" name="disgusted" class="hidden" id="disgusted">
                        <input type="number" name="happy" class="hidden" id="happy">
                        <input type="number" name="total" class="hidden" id="total">

                        <div style="display: flex; gap: 1rem; justify-content: center; flex-wrap: wrap;">
                            <button class="btn-modern btn-success" type="submit" id="stopBtn" style="font-size: 1.1rem; padding: 1.25rem 2.5rem;" onclick="stopDetection();">
                                <i class="fas fa-stop-circle"></i> 
                                <span>Stop & View Results</span>
                            </button>
                            <button type="button" id="cancelBtn" class="btn-modern btn-secondary" style="font-size: 1.1rem; padding: 1.25rem 2.5rem;">
                                <i class="fas fa-times"></i> 
                                <span>Cancel Analysis</span>
                            </button>
                            <button type="button" onclick="document.getElementById('debug-panel').style.display='block'" class="btn-modern btn-outline" style="font-size: 1.1rem; padding: 1.25rem 2.5rem; background: rgba(255,255,255,0.1); color: white; border-color: rgba(255,255,255,0.3);">
                                <i class="fas fa-bug"></i> 
                                <span>Debug</span>
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Info Section -->
        <div class="modern-card" style="background: rgba(255,255,255,0.95); backdrop-filter: blur(10px); padding: 2.5rem; margin-top: 2rem;">
            <h3 style="font-size: 1.5rem; font-weight: 700; margin-bottom: 2rem; color: var(--text-primary); text-align: center;">
                <i class="fas fa-lightbulb" style="color: var(--warning-color); margin-right: 0.5rem;"></i>
                How It Works
            </h3>
            <div class="grid grid-cols-3" style="gap: 2rem;">
                <div style="text-align: center; padding: 1.5rem;">
                    <div style="width: 70px; height: 70px; background: linear-gradient(135deg, var(--primary-color), var(--primary-dark)); border-radius: 50%; display: flex; align-items: center; justify-content: center; margin: 0 auto 1.5rem; box-shadow: 0 4px 16px rgba(0,0,0,0.1);">
                        <i class="fas fa-camera" style="font-size: 1.8rem; color: white;"></i>
                    </div>
                    <h4 style="font-weight: 700; margin-bottom: 0.75rem; color: var(--text-primary); font-size: 1.1rem;">1. Capture</h4>
                    <p style="margin: 0; font-size: 0.95rem; color: var(--text-secondary); line-height: 1.5;">Camera captures your facial expressions in real-time</p>
                </div>
                <div style="text-align: center; padding: 1.5rem;">
                    <div style="width: 70px; height: 70px; background: linear-gradient(135deg, var(--accent-color), var(--accent-dark)); border-radius: 50%; display: flex; align-items: center; justify-content: center; margin: 0 auto 1.5rem; box-shadow: 0 4px 16px rgba(0,0,0,0.1);">
                        <i class="fas fa-brain" style="font-size: 1.8rem; color: white;"></i>
                    </div>
                    <h4 style="font-weight: 700; margin-bottom: 0.75rem; color: var(--text-primary); font-size: 1.1rem;">2. Analyze</h4>
                    <p style="margin: 0; font-size: 0.95rem; color: var(--text-secondary); line-height: 1.5;">AI processes and identifies different emotions</p>
                </div>
                <div style="text-align: center; padding: 1.5rem;">
                    <div style="width: 70px; height: 70px; background: linear-gradient(135deg, var(--success-color), #16a34a); border-radius: 50%; display: flex; align-items: center; justify-content: center; margin: 0 auto 1.5rem; box-shadow: 0 4px 16px rgba(0,0,0,0.1);">
                        <i class="fas fa-chart-line" style="font-size: 1.8rem; color: white;"></i>
                    </div>
                    <h4 style="font-weight: 700; margin-bottom: 0.75rem; color: var(--text-primary); font-size: 1.1rem;">3. Visualize</h4>
                    <p style="margin: 0; font-size: 0.95rem; color: var(--text-secondary); line-height: 1.5;">Results displayed in interactive charts</p>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
// Enhanced video loading and emotion detection setup
document.addEventListener('DOMContentLoaded', function() {
    const startScreen = document.getElementById('startScreen');
    const analysisScreen = document.getElementById('analysisScreen');
    const startAnalysisBtn = document.getElementById('startAnalysisBtn');
    const cancelBtn = document.getElementById('cancelBtn');
    const video = document.getElementById('video');
    const loadingOverlay = document.getElementById('loading-overlay');
    const emotionStatus = document.getElementById('emotion-status');
    const stopBtn = document.getElementById('stopBtn');
    
    let analysisStarted = false;
    let stream = null;

    // Start analysis button click
    startAnalysisBtn.addEventListener('click', function() {
        startScreen.style.display = 'none';
        analysisScreen.style.display = 'block';
        analysisStarted = true;
        
        // Update button state
        startAnalysisBtn.classList.add('loading');
        startAnalysisBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> <span>Starting...</span>';
        
        // Initialize camera and AI models
        initializeAnalysis();
    });

    // Cancel analysis button
    cancelBtn.addEventListener('click', function() {
        stopCamera();
        analysisScreen.style.display = 'none';
        startScreen.style.display = 'block';
        analysisStarted = false;
        
        // Reset start button
        startAnalysisBtn.classList.remove('loading');
        startAnalysisBtn.innerHTML = '<i class="fas fa-video"></i> Start Emotion Analysis';
    });

    function initializeAnalysis() {
        // Check if face-api is loaded
        if (typeof faceapi === 'undefined') {
            showError('Face-API library not loaded. Please refresh the page.');
            return;
        }
        
        // Update Face-API status
        const faceapiStatus = document.getElementById('faceapi-status');
        if (faceapiStatus) faceapiStatus.innerHTML = '‚úÖ Loaded';
        
        // Load face-api models first
        const modelsStatus = document.getElementById('models-status');
        if (modelsStatus) modelsStatus.innerHTML = '‚è≥ Loading...';
        
        Promise.all([
            faceapi.nets.tinyFaceDetector.loadFromUri("/model"),
            faceapi.nets.faceLandmark68Net.loadFromUri("/model"),
            faceapi.nets.faceRecognitionNet.loadFromUri("/model"),
            faceapi.nets.faceExpressionNet.loadFromUri("/model"),
        ]).then(() => {
            console.log('Face-API models loaded successfully');
            if (modelsStatus) modelsStatus.innerHTML = '‚úÖ Loaded';
            startWebcam();
        }).catch(error => {
            console.error('Error loading models:', error);
            if (modelsStatus) modelsStatus.innerHTML = '‚ùå Failed';
            showError('Failed to load AI models. Please refresh and try again.');
        });
    }

    function startWebcam() {
        navigator.mediaDevices
            .getUserMedia({
                video: { 
                    width: 640, 
                    height: 480,
                    facingMode: 'user'
                },
                audio: false,
            })
            .then((mediaStream) => {
                stream = mediaStream;
                video.srcObject = stream;
                console.log('Webcam started successfully');
            })
            .catch((error) => {
                console.error('Error accessing webcam:', error);
                showError('Unable to access camera. Please check permissions and try again.');
            });
    }

    function stopCamera() {
        if (stream) {
            stream.getTracks().forEach(track => track.stop());
            stream = null;
        }
        if (video.srcObject) {
            video.srcObject = null;
        }
        // Clean up detection interval
        if (video.detectionInterval) {
            clearInterval(video.detectionInterval);
        }
    }

    function showError(message) {
        if (loadingOverlay) {
            loadingOverlay.innerHTML = `
                <div class="loading-content">
                    <i class="fas fa-exclamation-triangle" style="font-size: 3rem; color: #ef4444; margin-bottom: 1rem;"></i>
                    <p>${message}</p>
                    <button onclick="location.reload()" class="btn-modern btn-primary" style="margin-top: 1rem;">
                        <i class="fas fa-redo"></i> Try Again
                    </button>
                </div>
            `;
        }
    }
    
    // Handle video loading - hide overlay when video starts playing
    video.addEventListener('playing', function() {
        setTimeout(() => {
            if (loadingOverlay) {
                loadingOverlay.style.display = 'none';
            }
            if (emotionStatus) {
                emotionStatus.style.display = 'block';
            }
            
            // Initialize emotion detection
            if (window.initializeEmotionDetection) {
                window.initializeEmotionDetection();
            }
            
            // Test canvas after a delay
            setTimeout(() => {
                if (window.testCanvas) {
                    console.log('üß™ Testing canvas...');
                    window.testCanvas();
                    
                    // Remove test after 2 seconds and start real detection
                    setTimeout(() => {
                        if (window.startDetection) {
                            window.startDetection();
                        }
                    }, 2000);
                }
            }, 1000);
        }, 2000); // Give time for face-api models to load
    });
    
    // Handle form submission with loading state
    if (stopBtn) {
        stopBtn.addEventListener('click', function(e) {
            if (!stopBtn.classList.contains('loading')) {
                stopBtn.classList.add('loading');
                stopBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> <span>Processing Results...</span>';
                
                // Stop detection and camera
                if (window.stopDetection) {
                    window.stopDetection();
                }
                stopCamera();
            }
        });
    }
    
    // Handle video errors
    video.addEventListener('error', function(e) {
        console.error('Video error:', e);
        showError('Camera error occurred. Please check your camera and try again.');
    });

    // Cleanup on page unload
    window.addEventListener('beforeunload', function() {
        stopCamera();
    });
});
</script>

<script src="../scripts/face-api.js"></script>
<script src="../scripts/webcam-manual.js"></script>
